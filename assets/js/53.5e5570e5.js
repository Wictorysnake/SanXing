(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{345:function(e,t,v){"use strict";v.r(t);var _=v(12),l=Object(_.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"new-vue-中发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-vue-中发生了什么"}},[e._v("#")]),e._v(" new Vue() 中发生了什么？")]),e._v(" "),t("p",[e._v("详见："),t("RouterLink",{attrs:{to:"/Vue/vue2源码解读（1）.html"}},[e._v("vue2 源码解读（1）")])],1),e._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),t("p",[e._v("new Vue() 的作用是初始化一个 Vue 实例，它做了以下几件事：")]),e._v(" "),t("ul",[t("li",[e._v("处理组件配置项\n"),t("ul",[t("li",[e._v("初始化子组件时，做了性能优化，将配置项的深层次的属性放到 vm.$options 上，提高了代码执行效率")]),e._v(" "),t("li",[e._v("初始化根组件时，做了选项合并，将全局配置合并到根组件的局部配置中，比如 Vue.component 注册的全局组件会合并到根组件的 components 选项中")])])]),e._v(" "),t("li",[e._v("初始化实例的关系属性等，比如 $parent、$root、$children 和 $refs 等")]),e._v(" "),t("li",[e._v("初始化自定义事件")]),e._v(" "),t("li",[e._v("解析配置项，得到 vm.$slots，定义了 vm._c 和 vm.$createElement")]),e._v(" "),t("li",[e._v("调用 beforeCreate 钩子函数")]),e._v(" "),t("li",[e._v("解析配置项的 inject 属性，得到 result[key] = val 的配置对象，并对 key 做了响应式处理，这样就可以通过 vm.key 访问到 result[key] 的值了")]),e._v(" "),t("li",[e._v("数据响应式，处理了 props、methods、data、computed 和 watch")]),e._v(" "),t("li",[e._v("解析配置项的 provide 属性，最终得到 vm._provided")]),e._v(" "),t("li",[e._v("调用 created 钩子函数")]),e._v(" "),t("li",[e._v("如果配置项上存在 $el 属性，则自动调用 $mount 方法")]),e._v(" "),t("li",[e._v("接下来进入挂载阶段")])])])}),[],!1,null,null,null);t.default=l.exports}}]);